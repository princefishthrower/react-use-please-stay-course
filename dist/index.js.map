{"version":3,"file":"index.js","sources":["../src/hooks/useInterval.ts","../src/hooks/usePleaseStay.ts"],"sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback: () => void, interval: number, shouldRun: boolean) => {\n    const callbackRef = useRef(callback);\n\n    // Set callbackRef to the latest callback if callback changes\n    useEffect(() => {\n        callbackRef.current = callback;\n    }, [callback])\n\n    // Set up the interval\n    useEffect(() => {\n\n        // Don't schedule if shouldRun is false.\n        if (!shouldRun) {\n            return;\n        }\n\n        const id = setInterval(() => callbackRef.current(), interval);\n\n        return () => clearInterval(id);\n    }, [interval, shouldRun])\n};","import { useEffect, useState } from \"react\";\nimport { useInterval } from \"./useInterval\";\n\nexport const usePleaseStay = (titles: string[]) => {\n  const [shouldIterateTitles, setShouldIterateTitles] = useState(true);\n  const [titleIndex, setTitleIndex] = useState(0);\n\n  // visibilitychange event handler\n  const handleVisibilityChange = () => {\n    setShouldIterateTitles(document.visibilityState !== \"visible\");\n  };\n\n  // on mount of this hook, add the event listener. on unmount, remove it\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n\n  // at an interval of 500 ms, increment the titleIndex value\n  // reset it to 0 if we've reached the end of the list\n  useInterval(\n    () => {\n      const nextIndex = titleIndex + 1;\n      nextIndex === titles.length ? setTitleIndex(0) : setTitleIndex(nextIndex);\n    },\n    500,\n    shouldIterateTitles\n  );\n\n  // Each time titleIndex changes, we set the document.title to the value of titles at that index\n  useEffect(() => {\n    document.title = titles[titleIndex];\n  }, [titleIndex]);\n};\n"],"names":[],"mappings":";;AAEO,IAAM,WAAW,GAAG,UAAC,QAAoB,EAAE,QAAgB,EAAE,SAAkB,EAAA;AAClF,IAAA,IAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAGrC,IAAA,SAAS,CAAC,YAAA;AACN,QAAA,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;AACnC,KAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;;AAGd,IAAA,SAAS,CAAC,YAAA;;QAGN,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO;AACV,SAAA;AAED,QAAA,IAAM,EAAE,GAAG,WAAW,CAAC,cAAM,OAAA,WAAW,CAAC,OAAO,EAAE,CAArB,EAAqB,EAAE,QAAQ,CAAC,CAAC;QAE9D,OAAO,YAAA,EAAM,OAAA,aAAa,CAAC,EAAE,CAAC,CAAA,EAAA,CAAC;AACnC,KAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAA;AAC7B,CAAC;;ACnBM,IAAM,aAAa,GAAG,UAAC,MAAgB,EAAA;IACtC,IAAA,EAAA,GAAgD,QAAQ,CAAC,IAAI,CAAC,EAA7D,mBAAmB,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,sBAAsB,GAAA,EAAA,CAAA,CAAA,CAAkB,CAAC;IAC/D,IAAA,EAAA,GAA8B,QAAQ,CAAC,CAAC,CAAC,EAAxC,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAe,CAAC;;AAGhD,IAAA,IAAM,sBAAsB,GAAG,YAAA;AAC7B,QAAA,sBAAsB,CAAC,QAAQ,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC;AACjE,KAAC,CAAC;;AAGF,IAAA,SAAS,CAAC,YAAA;AACR,QAAA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;QACtE,OAAO,YAAA;AACL,YAAA,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;AAC3E,SAAC,CAAC;KACH,EAAE,EAAE,CAAC,CAAC;;;AAIP,IAAA,WAAW,CACT,YAAA;AACE,QAAA,IAAM,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;AACjC,QAAA,SAAS,KAAK,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;AAC5E,KAAC,EACD,GAAG,EACH,mBAAmB,CACpB,CAAC;;AAGF,IAAA,SAAS,CAAC,YAAA;AACR,QAAA,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACtC,KAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;AACnB;;;;"}