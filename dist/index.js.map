{"version":3,"file":"index.js","sources":["../src/utils/issueWarningMessage.ts","../src/hooks/useMultipleInstanceCheck.ts","../src/enums/AnimationType.ts","../src/utils/validateParameters.ts","../src/utils/getFavicon.ts","../src/utils/setFaviconHref.ts","../src/hooks/useInterval.ts","../src/hooks/useFaviconChangeEffect.ts","../src/hooks/useListenToVisibilityChangeOnMount.ts","../src/constants/Constants.ts","../src/hooks/useTitleChangeEffect.ts","../src/hooks/usePleaseStay.ts"],"sourcesContent":["// simple util that issues a console.error() in development mode, and is silent in all others\nexport const issueWarningMessage = (message: string) => {\n  if (process.env.NODE_ENV === \"development\") {\n    console.warn(\n      `usePleaseStay: ${message} This message will be shown in development only.`\n    );\n  }\n};\n","import { useEffect } from \"react\";\nimport { issueWarningMessage } from \"../utils/issueWarningMessage\";\n\nexport const useMultipleInstancesCheck = () => {\n  // on mount, check if we are not in production\n  useEffect(() => {\n    if (localStorage.getItem(\"usePleaseStay\") !== null) {\n      issueWarningMessage(\n        `usePleaseStay should be mounted only once in an application. Doing otherwise could lead to ðŸ‘» strange ðŸ‘» behavior. usePleaseStay was last mounted at ${localStorage.getItem(\n          \"usePleaseStay\"\n        )} Please check your code for multiple usePleaseStay usages. This warning is only valid if you see this warning appear more than once with different 'mounted at' dates in your console.`\n      );\n    }\n    // on mount, set the storage value to the curent ISO time\n    localStorage.setItem(\"usePleaseStay\", new Date().toISOString());\n    // on unmount, remove the value from localStorage\n    return () => localStorage.removeItem(\"usePleaseStay\");;\n  }, []);\n};\n","export enum AnimationType {\n    LOOP = \"LOOP\",\n    CASCADE = \"CASCADE\",\n    MARQUEE = \"MARQUEE\"\n  }","import { AnimationType } from \"../enums/AnimationType\";\nimport { ArrayOfOneOrMore } from \"./../types/ArrayOfOneOrMore\";\nimport { issueWarningMessage } from \"./issueWarningMessage\";\n\nexport const validateParameters = (\n  titles: ArrayOfOneOrMore<string>,\n  animationType: AnimationType\n) => {\n  if (titles.length === 1 && titles[0] === \"\") {\n    issueWarningMessage(\n      \"You have passed an empty string as the title. This will result in no text being displayed, regardless of AnimationType chosen.\"\n    );\n  }\n  if (titles.length > 1 && animationType === AnimationType.CASCADE) {\n    issueWarningMessage(\n      'You have passed more than one title, but have specified \"AnimationType.CASCADE\". Only the first title in the titles array will be used.'\n    );\n  }\n  if (titles.length > 1 && animationType === AnimationType.MARQUEE) {\n    issueWarningMessage(\n      'You have passed more than one title, but have specified \"AnimationType.MARQUEE\". Only the first title in the titles array will be used.'\n    );\n  }\n};\n","export const getFavicon = (): HTMLLinkElement | null => {\n  const nodeList = document.getElementsByTagName(\"link\");\n  for (let i = 0; i < nodeList.length; i++) {\n    if (\n      nodeList[i].getAttribute(\"rel\") === \"icon\" ||\n      nodeList[i].getAttribute(\"rel\") === \"shortcut icon\"\n    ) {\n      console.log(\"found favicon!\", nodeList[i]);\n      return nodeList[i];\n    }\n  }\n  return null;\n};\n","export const setFaviconHref = (href: string): HTMLLinkElement | null => {\n  const nodeList = document.getElementsByTagName(\"link\");\n  for (let i = 0; i < nodeList.length; i++) {\n    if (\n      nodeList[i].getAttribute(\"rel\") === \"icon\" ||\n      nodeList[i].getAttribute(\"rel\") === \"shortcut icon\"\n    ) {\n      nodeList[i].href = href;\n      return;\n    }\n  }\n};\n","import { useRef, useEffect } from 'react';\n\nexport const useInterval = (callback: () => void, interval: number, shouldRun: boolean) => {\n    const callbackRef = useRef(callback);\n\n    // Set callbackRef to the latest callback if callback changes\n    useEffect(() => {\n        callbackRef.current = callback;\n    }, [callback])\n\n    // Set up the interval\n    useEffect(() => {\n\n        // Don't schedule if shouldRun is false.\n        if (!shouldRun) {\n            return;\n        }\n\n        const id = setInterval(() => callbackRef.current(), interval);\n\n        return () => clearInterval(id);\n    }, [interval, shouldRun])\n};","import { useEffect, useRef, useState } from \"react\";\nimport { getFavicon } from \"../utils/getFavicon\";\nimport { setFaviconHref } from \"../utils/setFaviconHref\";\nimport { useInterval } from \"./useInterval\";\n\nexport const useFaviconChangeEffect = (\n  faviconLinks: string[],\n  shouldIterateFavicons: boolean,\n  interval: number,\n  shouldAlwaysPlay: boolean\n) => {\n  const [faviconIndex, setFaviconIndex] = useState(0);\n  const originalFaviconHref = useRef<string>();\n  const faviconRef = useRef<HTMLLinkElement | null>();\n\n  // at an interval of interval ms, increment the faviconIndex value\n  // (if shouldIterateFavicons or shouldAlwaysPlay is true)\n  useInterval(\n    () => {\n      if (faviconLinks.length > 1) {\n        const nextIndex = faviconIndex + 1;\n        nextIndex === faviconLinks.length\n          ? setFaviconIndex(0)\n          : setFaviconIndex(nextIndex);\n      }\n    },\n    interval,\n    shouldIterateFavicons || shouldAlwaysPlay\n  );\n\n  // when favicon index changes, and when shouldIterateFavicons is true set the favicon href to the given link\n  useEffect(() => {\n    if (shouldIterateFavicons) {\n      faviconRef.current.href = faviconLinks[faviconIndex];\n      return;\n    }\n    // if shouldIterateFavicons goes to false and should always play is false, AND originalfaviconhref is actually defined,\n    // we should restore the original href\n    if (\n      !shouldIterateFavicons &&\n      !shouldAlwaysPlay &&\n      originalFaviconHref.current\n    ) {\n      setFaviconHref(originalFaviconHref.current);\n    }\n  }, [faviconIndex, shouldIterateFavicons]);\n\n  // on mount, save the original href of the favicon\n  useEffect(() => {\n    faviconRef.current = getFavicon();\n    originalFaviconHref.current = faviconRef.current.href;\n    // on unmount, restore the original favicon (by setting whatever faviconRef is to the original favicon)\n    return () => {\n      if (originalFaviconHref.current) {\n        faviconRef.current.href = originalFaviconHref.current;\n      }\n    };\n  }, []);\n};\n","import { useEffect } from \"react\";\n\nexport const useListenToVisibilityChangeOnMount = (\n  setShouldToggleTitles: (shouldToggleTitles: boolean) => void,\n  shouldAlwaysPlay: boolean\n) => {\n  // visibilitychange event handler\n  const handleVisibilityChange = () => {\n    setShouldToggleTitles(document.visibilityState !== \"visible\");\n  };\n\n  // on mount of this hook, add the event listener. on unmount, remove it\n  useEffect(() => {\n    if (shouldAlwaysPlay) {\n      setShouldToggleTitles(true);\n      return;\n    }\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, [shouldAlwaysPlay]);\n};\n","export const CHROME_TAB_CHARACTER_COUNT = 30;","import { useEffect, useRef, useState } from \"react\";\nimport { CHROME_TAB_CHARACTER_COUNT } from \"../constants/Constants\";\nimport { AnimationType } from \"../enums/AnimationType\";\nimport { ArrayOfOneOrMore } from \"../types/ArrayOfOneOrMore\";\nimport { useInterval } from \"./useInterval\";\n\nexport const useTitleChangeEffect = (\n  titles: ArrayOfOneOrMore<string>,\n  shouldIterateTitles: boolean,\n  animationType: AnimationType,\n  interval: number,\n  shouldAlwaysPlay: boolean\n) => {\n  const [titleIndex, setTitleIndex] = useState(0);\n  const originalTitleRef = useRef<string>(document.title);\n\n  const runLoopIterationLogic = () => {\n    const nextIndex = titleIndex + 1;\n    nextIndex === titles.length ? setTitleIndex(0) : setTitleIndex(nextIndex);\n  };\n\n  const runCascadeIterationLogic = () => {\n    const nextIndex = titleIndex + 1;\n    nextIndex === titles[0].length\n      ? setTitleIndex(0)\n      : setTitleIndex(nextIndex);\n  };\n\n  const runMarqueeIterationLogic = () => {\n    const nextIndex = titleIndex + 1;\n    nextIndex === CHROME_TAB_CHARACTER_COUNT\n      ? setTitleIndex(0)\n      : setTitleIndex(nextIndex);\n  };\n\n  const runLoopTitleLogic = () => {\n    document.title = titles[titleIndex];\n  };\n\n  const runCascadeTitleLogic = () => {\n    document.title = titles[0].substring(0, titleIndex);\n  };\n\n  const runMarqueeTitleLogic = () => {\n    const carryOverCount =\n      titleIndex + titles[0].length - CHROME_TAB_CHARACTER_COUNT;\n\n    if (carryOverCount > 0) {\n      const spaceText = \"\\u205fâ€‹â€‹â€‹\".repeat(\n        CHROME_TAB_CHARACTER_COUNT - titles[0].length\n      );\n      document.title =\n        titles[0].substring(\n          titles[0].length - carryOverCount,\n          titles[0].length\n        ) +\n        spaceText +\n        titles[0].substring(0, titles[0].length - carryOverCount);\n    } else {\n      const offset = \"\\u205fâ€‹â€‹â€‹\".repeat(titleIndex);\n      document.title = offset + titles[0];\n    }\n  };\n\n  // at an interval of interval ms, increment the titleIndex value\n  // reset it to 0 if we've reached the end of the list\n  useInterval(\n    () => {\n      switch (animationType) {\n        case AnimationType.CASCADE:\n          return runCascadeIterationLogic();\n        case AnimationType.MARQUEE:\n          return runMarqueeIterationLogic();\n        case AnimationType.LOOP:\n        default:\n          return runLoopIterationLogic();\n      }\n    },\n    interval,\n    shouldIterateTitles\n  );\n\n  // Each time titleIndex changes and shouldIterateTitles is true, we set the document.title to the value of titles at that index\n  useEffect(() => {\n    if (shouldIterateTitles || shouldAlwaysPlay) {\n      switch (animationType) {\n        case AnimationType.CASCADE:\n          return runCascadeTitleLogic();\n        case AnimationType.MARQUEE:\n          return runMarqueeTitleLogic();\n        case AnimationType.LOOP:\n        default:\n          return runLoopTitleLogic();\n      }\n    }\n    \n    // if shouldIterateTitles and shouldAlwaysPlay are both false, we should restore the original title\n    if (!shouldIterateTitles && !shouldAlwaysPlay) {\n      document.title = originalTitleRef.current;\n    }\n  }, [titleIndex, shouldIterateTitles]);\n\n  // on unmount, restore the original title\n  useEffect(() => {\n    return () => {\n      document.title = originalTitleRef.current;\n    };\n  }, []);\n};\n","import { useMultipleInstancesCheck } from './useMultipleInstanceCheck';\nimport { validateParameters } from './../utils/validateParameters';\nimport { UsePleaseStayOptions } from './../types/UsePleaseStayOptions';\nimport { useState } from \"react\";\nimport { useFaviconChangeEffect } from \"./useFaviconChangeEffect\";\nimport { useListenToVisibilityChangeOnMount } from \"./useListenToVisibilityChangeOnMount\";\nimport { useTitleChangeEffect } from \"./useTitleChangeEffect\";\nimport { AnimationType } from '../enums/AnimationType';\nimport { useRestoreDefaultsOnUnmountOrRefocus } from './useRestoreDefaultsOnUnmountOrRefocus';\n\nexport const usePleaseStay = ({\n  titles,\n  animationType = AnimationType.LOOP,\n  faviconLinks = [],\n  interval = 500,\n  shouldAlwaysPlay = false\n}: UsePleaseStayOptions) => {\n  validateParameters(titles, animationType);\n  useMultipleInstancesCheck()\n  const [shouldIterateTitles, setShouldIterateTitles] = useState(false);\n\n  // Sets the shouldIterateTitles value whenever page visibility is lost.\n  // Handles removing the event listener in cleanup as well.\n  useListenToVisibilityChangeOnMount(setShouldIterateTitles, shouldAlwaysPlay);\n\n  // Modifies the document.title of the page whenever shouldIterateTitles is true\n  useTitleChangeEffect(titles, shouldIterateTitles, animationType, interval, shouldAlwaysPlay);\n\n  // Modifies the favicon of the page whenever shouldIterateTitles is true\n  useFaviconChangeEffect(faviconLinks, shouldIterateTitles, interval, shouldAlwaysPlay);\n};\n"],"names":[],"mappings":"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"}